version: '3.9'
services:

  reverse-proxy:
    image: traefik:v3.1
    container_name: traefik
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    command: 
      - "--entrypoints.http.address=:80"
      - "--entrypoints.https.address=:443"
      - "--api.insecure=false"
      - "--api.dashboard=true"
      - "--providers.docker"
      - "--providers.docker.watch"
      - "--log=true"
      - "--log.filePath=/logs/traefik.log"
      - "--log.level=DEBUG"
    labels:
      - "traefik.http.routers.reverse-proxy-rtr.rule=Host(`${DOMAIN_TRAEFIK}`)"
      - "traefik.http.routers.reverse-proxy-rtr.entrypoints=http"
      # - "traefik.http.routers.reverse-proxy-rtr.tls=true"
      # - "traefik.http.routers.reverse-proxy-rtr.tls.certresolver=letsencrypt"
      - "traefik.http.routers.reverse-proxy-rtr.service=api@internal"
      - "traefik.http.middlewares.traefik-auth.basicauth.users=${TRAEFIK_AUTH}"
      - "traefik.http.middlewares.traefik-auth.basicauth.removeheader=true"
      - "traefik.http.routers.reverse-proxy-rtr.middlewares=traefik-auth"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik-logs:/logs
    networks:
      - traefik

  frontend:
    image: profileorg/wowtogo-fe-dev:latest
    container_name: frontend
    restart: unless-stopped
    expose:
      - 80
    networks:
      - traefik
    labels:
      - "traefik.http.routers.frontend.service=frontend"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"
      - "traefik.http.routers.frontend.rule=Host(`${DOMAIN_FRONTEND}`)"
      - "traefik.http.routers.frontend.entrypoints=http"
      # - "traefik.http.routers.frontend.tls=true"
      # - "traefik.http.routers.frontend.tls.certresolver=letsencrypt"

  # backend:
  #   image: profileorg/wowtogo-be-dev:latest
  #   container_name: backend
  #   restart: unless-stopped
  #   ports:
  #     - 8080
  #   volumes:
  #     - ./app:/app
  #   environment:
  #     - ENV_VARIABLE=value
  #   depends_on:
  #     - db

  # backend-database:
  #   image: postgres:latest
  #   container_name: postgresbe
  #   restart: unless-stopped
  #   ports:
  #     - 5432
  #   environment:
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_PASSWORD=postgres
  #     - POSTGRES_DB=postgres
  #   volumes:
  #     - backend_db:/var/lib/postgresql/data
  #   networks:
  #     - local

volumes:
  backend_db:
  openfga_db:
  traefik-logs:

networks:
  traefik: {}
  local:
    internal: true
  